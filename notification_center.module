<?php

/**
 * Implements hook_entity_info().
 */
function notification_center_entity_info() {
  $return = array(
    'notification' => array(
	      'label' => t('Notification'),
	      'base table' => 'com_notification',
	      'fieldable' => TRUE,
	      'entity keys' => array(
	        'id' => 'nid',
	      ),
	    ),
    'notification_status' => array(
	      'label' => t('Notification Status'),
	      'base table' => 'com_notification_status',
	      'fieldable' => TRUE,
	      'entity keys' => array(
	        'id' => 'nid',
	      ),
	    ),
    );
}

/**
 * Implements hook_entity_property_info().
 */
function demo_entity_property_info() {

  $info = array();

  $info['notification']['properties']['nid'] = array(
    'label' => t('Notification ID'),
    'description' => t('Notification ID.'),
    'type' => 'integer',
    'schema field' => 'nid',
  );

  $info['notification']['properties']['ulid'] = array(
    'label' => t('Trigger User ID'),
    'description' => t('User who launchs the notification.'),
    'type' => 'integer',
    'schema field' => 'ulid',
  );

  $info['notification']['properties']['urid'] = array(
    'label' => t('Receiving User ID'),
    'description' => t('User who receives the notification.'),
    'type' => 'integer',
    'schema field' => 'urid',
  );

  $info['notification']['properties']['date'] = array(
    'label' => t('Date'),
    'description' => t('Trigger date action.'),
    'type' => 'integer',
    'schema field' => 'date',
  );

  $info['notification']['properties']['type'] = array(
    'label' => t('Notification Type'),
    'description' => t('Notification type.'),
    'type' => 'text',
    'schema field' => 'type',
  );

  $info['notification']['properties']['oid'] = array(
    'label' => t('Object ID'),
    'description' => t('Object over which occurs the action.'),
    'type' => 'integer',
    'schema field' => 'oid',
  );

  $info['notification']['properties']['otype'] = array(
    'label' => t('Receiving object type'),
    'description' => t('User who receives the notification.'),
    'type' => 'text',
    'schema field' => 'otype',
  );
  return $info;
}

function notification_center_notify($notification){
	$entity = entity_create('notification', $notification);
  	entity_save('notification', $entity);
}

/**
 * Implements hook_views_api().
 */
function notification_center_views_api($module = NULL, $api = NULL) {
  return array("api" => "3.0");
}

function notification_center_theme_registry_alter(&$theme_registry) {
  // tell the theme system to look in the "templates" subdirectory within our module directory
  $path = drupal_get_path('module', 'notification_center');
  $theme_registry['search_results']['theme paths'] = array(0 => $path . '/templates');
  $theme_registry['search_results']['theme path'] = $path . '/templates';
  $theme_registry['search_results']['path'] = $path . '/templates';
  // tell the theme system to use 'search-results.tpl.php' as the template file. Note that you do not include 'tpl.php'
  $theme_registry['search_results']['template'] = 'search-results';
}
